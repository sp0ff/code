    /* ЛР 7.
    ДИНАМИЧЕСКОЕ ВЫДЕЛЕНИЕ ПАМЯТИ
    --------------------------------------
    Для использования свободной памяти ОС (heap - "куча")
    объявляются динамические переменные по синтаксису
    указатель_на_тип имя_переменной = new тип;
    или
    тип * имя_переменной = new тип;
    Работа с динамической памятью происходит через указатели
    Преимущества
    1) доступно гораздо больше памяти, нежели в стеке
    2) размеры массиво
    Особенность:
    Можно очищать
    Чтобы очистить память delete название_указателя
    В динамической памяти могут выделяться только одномерные массивы
    тип * имя_указателя = new тип [длина];
    удаляются одномерные массивы с помощью записи
    delete[] имя_указателя
    Для выделения двумерного массива сначала создаётся одномерный массив
    содержащий указатели на другие массивы (строки)
    int ** dynamic2Darray = new int[l1]
    затем выделяется блок памяти под каждую строку и указатель на неё
    возвращается в созданный массив указателей
    for (int i = 0; i < l1; i++){
    dynamic2darray[i] = new int[l2];
        for (int j = 0; j < l2; j++){
        dynamic2Darray[i][j] = j;
        }}
    Чтобы удалить двумерный массив
    for(int i = 0; i < l1; i++){
        delete[] dynemic2Darray[i];
        }
    delete[] dynamic2Darray;*/

#include <iostream>

int main()
{
    return 0;
}
